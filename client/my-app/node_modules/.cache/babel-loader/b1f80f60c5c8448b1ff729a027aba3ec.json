{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\Pet_Memories\\\\client\\\\my-app\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Avatar, Grid, Button, Container, Paper, Typography } from \"@mui/material\";\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Input from \"./input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport Icon from './icon';\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState();\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(p => !p);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      navigate('/', {\n        replace: true\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log('Google fail');\n  };\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        marginTop: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '15px'\n      },\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          backgroundColor: '#d9427f'\n        },\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignUp ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          width: '100%',\n          marginTop: '20px'\n        },\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: 'Email address',\n            handleChange: handleChange,\n            type: 'email'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: 'password',\n            label: 'Password',\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: 'confirmPassword',\n            label: 'Repeat password',\n            handleChange: handleChange,\n            type: 'password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: 'submit',\n          fullWidth: true,\n          variant: 'contained',\n          color: 'primary',\n          sx: {\n            marginTop: '15px'\n          },\n          children: isSignUp ? 'Sign up' : 'Sign in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: '277316542534-c0q6ceu2qlfc90d64qe51p2sdctlkfja.apps.googleusercontent.com',\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              marginBottom: '10px',\n              marginTop: '10px'\n            },\n            color: 'primary',\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 44\n            }, this),\n            variant: 'contained',\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: 'flex-end',\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignUp ? 'Already have an account? Sign in' : 'Don`t have any account? Sign up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"AzrVVXuRsmRkhtZeVGGh3lTwodA=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["D:/web/Pet_Memories/client/my-app/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Grid","Button","Container","Paper","Typography","LockOutlinedIcon","Input","GoogleLogin","Icon","useDispatch","useNavigate","initialState","firstName","lastName","email","Auth","isSignUp","setIsSignUp","showPassword","setShowPassword","dispatch","navigate","formData","setFormData","handleSubmit","handleChange","switchMode","p","googleSuccess","res","result","profileObj","token","tokenId","type","data","replace","e","console","log","googleFailure","handleShowPassword","prevShowPassword","marginTop","display","flexDirection","alignItems","padding","backgroundColor","width","renderProps","marginBottom","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Avatar, Grid, Button, Container, Paper, Typography, } from \"@mui/material\";\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Input from \"./input\";\r\nimport {GoogleLogin} from \"react-google-login\";\r\nimport Icon from './icon'\r\nimport {useDispatch} from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst initialState = { firstName: '', lastName: '', email: '', }\r\n\r\nconst Auth = () => {\r\n    const [isSignUp,setIsSignUp] = useState(false);\r\n    const [showPassword,setShowPassword] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [formData,setFormData] = useState();\r\n    const handleSubmit = () => {\r\n      \r\n    }\r\n    const handleChange = () => {\r\n      \r\n    }\r\n    const switchMode = () => {\r\n        setIsSignUp((p) => !p);\r\n        setShowPassword(false);\r\n    };\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n            dispatch({ type:'AUTH', data: { result, token } })\r\n\r\n            navigate('/',{replace:true});\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    const googleFailure = () => {\r\n        console.log('Google fail');\r\n    }\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword)\r\n    return(\r\n        <Container component=\"main\" maxWidth={\"xs\"}>\r\n            <Paper sx={{\r\n                marginTop: '10px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                padding: '15px',\r\n            }} elevation={3}>\r\n                <Avatar sx={{\r\n                    backgroundColor: '#d9427f'\r\n                }}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography variant={\"h5\"}>{isSignUp ? 'Sign up' : 'Sign in'}</Typography>\r\n                <form style={{\r\n                    width: '100%',\r\n                    marginTop: '20px'\r\n                }} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignUp && (\r\n                                <>\r\n                                    <Input name=\"firstName\" label={\"First Name\"} handleChange={handleChange} autoFocus half/>\r\n                                    <Input name=\"lastName\" label={\"Last Name\"} handleChange={handleChange} half/>\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name={\"email\"} label={'Email address'} handleChange={handleChange} type={'email'}/>\r\n                        <Input name={'password'} label={'Password'} handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword}/>\r\n                        { isSignUp && <Input name={'confirmPassword'} label={'Repeat password'} handleChange={handleChange} type={'password'}/>}\r\n                    </Grid>\r\n                    <Button type={'submit'} fullWidth variant={'contained'} color={'primary'} sx={{\r\n                        marginTop:'15px'\r\n                    }}>{isSignUp ? 'Sign up' : 'Sign in'}</Button>\r\n                    <GoogleLogin\r\n                        clientId={'277316542534-c0q6ceu2qlfc90d64qe51p2sdctlkfja.apps.googleusercontent.com'}\r\n                        render={(renderProps) => (\r\n                            <Button\r\n                                sx={{\r\n                                    marginBottom:'10px',\r\n                                    marginTop:'10px'\r\n                                }}\r\n                                color={'primary'}\r\n                                fullWidth\r\n                                onClick={renderProps.onClick}\r\n                                disabled={renderProps.disabled}\r\n                                startIcon={<Icon/>}\r\n                                variant={'contained'}\r\n                            >\r\n                                Sign in with Google\r\n                            </Button>\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                    <Grid container justify={'flex-end'}>\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>\r\n                                {isSignUp ? 'Already have an account? Sign in' : 'Don`t have any account? Sign up'}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\nexport default Auth;"]},"metadata":{},"sourceType":"module"}