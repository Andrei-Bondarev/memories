{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js'; // TODO(justinfagnani): remove line when we get NodePart moving methods\n\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js'; // IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\n\n\nexport const html = function (strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n\n  return new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n};\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\n\nexport const svg = function (strings) {\n  for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    values[_key2 - 1] = arguments[_key2];\n  }\n\n  return new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;AAaA;;;;AAIA,SAAQA,wBAAR,QAAuC,qCAAvC;AACA,SAAQC,iBAAR,EAA2BC,cAA3B,QAAgD,0BAAhD;AAEA,SAAQC,wBAAR,EAAkCH,wBAAlC,QAAiE,qCAAjE;AACA,SAAQI,SAAR,EAAgCC,WAAhC,QAAkD,oBAAlD,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,cAAzC;AACA,SAAQC,QAAR,EAAkBC,OAAlB,QAAsC,eAAtC;AACA,SAAQC,kBAAR,EAA4BC,aAA5B,EAA2CC,oBAA3C,EAAiEC,SAAjE,EAA4EC,UAA5E,EAAwFC,WAAxF,EAAqGC,QAArG,EAA+GC,iBAA/G,EAAkIC,YAAlI,QAAqJ,gBAArJ;AAEA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,SAAQC,cAAR,EAAwBC,eAAxB,QAA8C,2BAA9C;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AAEA,SAAQtB,iBAAR,EAA2BC,cAA3B,QAAgD,0BAAhD;AACA,SAAQsB,YAAR,EAAsBC,oBAAtB,EAA4CC,QAA5C,QAA2D,mBAA3D,C,CAQA;AACA;AACA;;AACA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,GAACA,MAAM,CAAC,iBAAD,CAAN,KAA8BA,MAAM,CAAC,iBAAD,CAAN,GAA4B,EAA1D,CAAD,EAAgEC,IAAhE,CAAqE,OAArE;AACD;AAED;;;;;;AAIA,OAAO,MAAMC,IAAI,GAAG,UAACC,OAAD;AAAA,oCAAmCC,MAAnC;AAAmCA,UAAnC;AAAA;;AAAA,SAChB,IAAI7B,cAAJ,CAAmB4B,OAAnB,EAA4BC,MAA5B,EAAoC,MAApC,EAA4C/B,wBAA5C,CADgB;AAAA,CAAb;AAGP;;;;;AAIA,OAAO,MAAMgC,GAAG,GAAG,UAACF,OAAD;AAAA,qCAAmCC,MAAnC;AAAmCA,UAAnC;AAAA;;AAAA,SACf,IAAI9B,iBAAJ,CAAsB6B,OAAtB,EAA+BC,MAA/B,EAAuC,KAAvC,EAA8C/B,wBAA9C,CADe;AAAA,CAAZ","names":["defaultTemplateProcessor","SVGTemplateResult","TemplateResult","DefaultTemplateProcessor","directive","isDirective","removeNodes","reparentNodes","noChange","nothing","AttributeCommitter","AttributePart","BooleanAttributePart","EventPart","isIterable","isPrimitive","NodePart","PropertyCommitter","PropertyPart","parts","render","templateCaches","templateFactory","TemplateInstance","createMarker","isTemplatePartActive","Template","window","push","html","strings","values","svg"],"sources":["D:\\web\\Pet_Memories\\client\\my-app\\node_modules\\lit-html\\src\\lit-html.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n"]},"metadata":{},"sourceType":"module"}