{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\Pet_Memories\\\\client\\\\my-app\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@mui/material\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  var _user$result3;\n\n  const dispatch = useDispatch();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const post = useSelector(state => props.currentId ? state.posts.posts.find(p => p._id === props.currentId) : null);\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (props.currentId) {\n      var _user$result;\n\n      dispatch(updatePost(props.currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }, navigate));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    props.setCurrentId(null);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'h6',\n        align: 'center',\n        children: \"Please sign in to create memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      padding: '50px'\n    },\n    elevation: 6,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [props.currentId ? 'Edit' : 'Create', \" a memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          marginBottom: '10px'\n        },\n        name: \"title\",\n        label: \"Title\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          marginBottom: '10px'\n        },\n        name: \"message\",\n        label: \"Message\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          marginBottom: '10px'\n        },\n        name: \"tags\",\n        label: \"Tags\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '97%',\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          marginBottom: '10px'\n        },\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        size: \"large\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: clear,\n        color: \"secondary\",\n        size: \"small\",\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"hMnsQ9lg4X4l0eUNB/r/ZbdfNa0=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/web/Pet_Memories/client/my-app/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","createPost","updatePost","useSelector","useNavigate","Form","props","dispatch","user","JSON","parse","localStorage","getItem","post","state","currentId","posts","find","p","_id","postData","setPostData","title","message","tags","selectedFile","navigate","handleSubmit","e","preventDefault","name","result","clear","setCurrentId","display","flexDirection","alignItems","padding","flexWrap","justifyContent","marginBottom","target","value","split","width","margin","base64"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {TextField, Button, Typography, Paper} from \"@mui/material\";\r\nimport FileBase from \"react-file-base64\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createPost,updatePost} from \"../../actions/posts\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nconst Form = (props) => {\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n    const post = useSelector((state) => props.currentId ? state.posts.posts.find((p) => p._id === props.currentId) : null);\r\n    const [postData,setPostData] = useState({\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n    useEffect(() => {\r\n        if(post)\r\n            setPostData(post);\r\n    },[post])\r\n    const navigate = useNavigate();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(props.currentId){\r\n            dispatch(updatePost(props.currentId,{ ...postData, name: user?.result?.name}));\r\n        }else {\r\n            dispatch(createPost({ ...postData, name: user?.result?.name},navigate));\r\n        }\r\n        clear();\r\n    }\r\n    const clear = () => {\r\n        props.setCurrentId(null);\r\n        setPostData({\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        });\r\n    }\r\n\r\n    if(!user?.result?.name) {\r\n        return (\r\n            <Paper sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n            }}>\r\n                <Typography variant={'h6'} align={'center'}>\r\n                    Please sign in to create memories\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Paper sx={{\r\n            padding: '50px',\r\n        }} elevation={6}>\r\n            <form action=\"\" autoComplete=\"off\" noValidate onSubmit={handleSubmit} style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <Typography variant=\"h6\">{props.currentId ? 'Edit' : 'Create'} a memory</Typography>\r\n                <TextField sx={{marginBottom: '10px'}} name=\"title\" label=\"Title\" variant=\"outlined\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\r\n                <TextField sx={{marginBottom: '10px'}} name=\"message\" label=\"Message\" variant=\"outlined\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\r\n                <TextField sx={{marginBottom: '10px'}} name=\"tags\" label=\"Tags\" variant=\"outlined\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})}/>\r\n                <div style={{\r\n                    width: '97%',\r\n                    margin: '10px 0',\r\n                }}>\r\n                    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/>\r\n                </div>\r\n                <Button sx={{\r\n                    marginBottom: '10px',\r\n                }} variant=\"contained\" type=\"submit\" color=\"primary\" size=\"large\" fullWidth>\r\n                    Submit\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={clear} color=\"secondary\" size=\"small\" fullWidth>\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}