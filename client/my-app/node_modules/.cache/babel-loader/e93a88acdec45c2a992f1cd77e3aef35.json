{"ast":null,"code":"import { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE, FETCH_SEARCH } from \"../constants/actionTypes\";\nexport default (function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_SEARCH:\n      return action.payload;\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case LIKE:\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case FETCH_ALL:\n      return {};\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["D:/web/Pet_Memories/client/my-app/src/reducers/posts.js"],"names":["CREATE","DELETE","FETCH_ALL","LIKE","UPDATE","FETCH_SEARCH","posts","action","type","payload","filter","post","_id","map"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,MAAzC,EAAiDC,YAAjD,QAAoE,0BAApE;AAEA,gBAAe,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,EAAc;AAAA,MAAXC,MAAW;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,YAAL;AACI,aAAOE,MAAM,CAACE,OAAd;;AACJ,SAAKR,MAAL;AACI,aAAOK,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ,SAAKN,IAAL;AACA,SAAKC,MAAL;AACI,aAAOE,KAAK,CAACO,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAvE,CAAP;;AACJ,SAAKX,MAAL;AACI,aAAO,CAAC,GAAGM,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKP,SAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOI,KAAP;AAbR;AAeH,CAhBD","sourcesContent":["import {CREATE, DELETE, FETCH_ALL, LIKE, UPDATE, FETCH_SEARCH} from \"../constants/actionTypes\";\r\n\r\nexport default (posts = [],action) => {\r\n    switch (action.type){\r\n        case FETCH_SEARCH:\r\n            return action.payload;\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload)\r\n        case LIKE:\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case FETCH_ALL:\r\n            return {};\r\n        default:\r\n            return posts;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}