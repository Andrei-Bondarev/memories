{"ast":null,"code":"import * as api from '../api';\nimport { CREATE, DELETE, FETCH_ALL, LIKE, UPDATE, FETCH_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from \"../constants/actionTypes\";\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.getPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.getPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const createPost = (post, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    navigate('/posts/' + data._id);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const updatePost = (currentId, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(currentId, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n};\nexport const deletePost = currentId => async dispatch => {\n  try {\n    await api.deletePost(currentId);\n    dispatch({\n      type: DELETE,\n      payload: currentId\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const likePost = currentId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(currentId);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/web/Pet_Memories/client/my-app/src/actions/posts.js"],"names":["api","CREATE","DELETE","FETCH_ALL","LIKE","UPDATE","FETCH_SEARCH","START_LOADING","END_LOADING","FETCH_POST","COMMENT","getPosts","page","dispatch","type","data","payload","e","console","log","message","getPost","id","createPost","post","navigate","_id","updatePost","currentId","deletePost","likePost","commentPost","value","comment","comments","getPostsBySearch","searchQuery","fetchPostsBySearch","error"],"mappings":"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","sourcesContent":["import * as api from '../api'\r\nimport {CREATE, DELETE, FETCH_ALL, LIKE, UPDATE,FETCH_SEARCH, START_LOADING, END_LOADING, FETCH_POST, COMMENT} from \"../constants/actionTypes\";\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n\r\n    try{\r\n\r\n        dispatch({ type: START_LOADING })\r\n        const { data } = await api.getPosts(page);\r\n        dispatch( {\r\n            type: FETCH_ALL,\r\n            payload: data\r\n        })\r\n        dispatch({ type: END_LOADING })\r\n    }catch (e){\r\n        console.log(e.message)\r\n    }\r\n}\r\nexport const getPost = (id) => async (dispatch) => {\r\n\r\n    try{\r\n\r\n        dispatch({ type: START_LOADING })\r\n        const { data } = await api.getPost(id);\r\n        dispatch( {\r\n            type: FETCH_POST,\r\n            payload: data\r\n        })\r\n        dispatch({ type: END_LOADING })\r\n    }catch (e){\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\nexport const createPost = (post, navigate) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING })\r\n        const {data} = await api.createPost(post)\r\n        navigate('/posts/'+data._id);\r\n        dispatch({type:CREATE, payload: data});\r\n        dispatch({ type: END_LOADING })\r\n    }catch (e){\r\n        console.log(e.message);\r\n    }\r\n}\r\nexport const updatePost = (currentId,post) => async (dispatch) => {\r\n    try{\r\n        const {data} = await api.updatePost(currentId,post);\r\n        dispatch({type: UPDATE,payload: data});\r\n    }catch (e){\r\n        console.log(e.message);\r\n    }\r\n}\r\nexport const deletePost = (currentId) => async (dispatch) => {\r\n    try{\r\n        await api.deletePost(currentId);\r\n\r\n        dispatch({type: DELETE,payload: currentId})\r\n    }catch (e){\r\n        console.log(e);\r\n    }\r\n}\r\nexport const likePost = (currentId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.likePost(currentId);\r\n        dispatch({type: LIKE,payload: data})\r\n    }catch (e){\r\n        console.log(e);\r\n    }\r\n}\r\nexport const commentPost = (value,id) => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.comment(value,id);\r\n       dispatch({type: COMMENT, payload: data});\r\n       return data.comments;\r\n\r\n    }catch (e){\r\n        console.log(e);\r\n    }\r\n}\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch({ type: FETCH_SEARCH, payload: { data } });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}